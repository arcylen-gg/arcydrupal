<?php

/**
 * @file
 * Contains block_backup_restore.module functionality.
 */

use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_page_attachments_alter().
 */
function block_backup_restore_page_attachments_alter(array &$build) {
  if (\Drupal::routeMatch()->getRouteName() == 'block.admin_display' || \Drupal::routeMatch()->getRouteName() == 'block.admin_display_theme') {
    $build['#attached']['library'][] = 'block_backup_restore/block-backup-restore';
  }
}

/**
 * Implements hook_form_alter().
 */
function block_backup_restore_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $themeParameter = \Drupal::routeMatch()->getParameters()->get("theme");
  if (empty($themeParameter)) {
    $themeParameter = \Drupal::config('system.theme')->get('default');
  }

  if ($form_id == 'block_admin_display_form') {
    $form['restore_button'] = [
      '#type' => 'dropbutton',
      '#links' => [
        'a' => [
          'title' => t('Restore Block Layout'),
          'url' => Url::fromRoute('block_backup_restore.restore_process_theme', ['theme' => $themeParameter]),
        ],
        'b' => [
          'title' => t('Restore By File'),
          'url' => Url::fromRoute('block_backup_restore.restore_config_form', ['theme' => $themeParameter]),
        ],
      ],
      '#prefix' => '<div class="backup-restore-button-list">',
      '#weight' => -100,
    ];
    $form['backup_button'] = [
      '#type' => 'dropbutton',
      '#links' => [
        'a' => [
          'title' => t('Backup Block Layout'),
          'url' => Url::fromRoute('block_backup_restore.backup_process_theme', ['theme' => $themeParameter]),
        ],
        'b' => [
          'title' => t('Export Block Layout'),
          'url' => Url::fromRoute('block_backup_restore.backup_process_theme', ['theme' => $themeParameter, 'download' => TRUE]),
        ],
      ],
      '#suffix' => '</div>',
      '#weight' => -100,
    ];
  }
}
